apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.dokka'

gradle.ext.isCiServer = System.getenv().containsKey("CI")
logger.warn("Running on CI: ${gradle.ext.isCiServer}")

if (gradle.ext.isCiServer) {
    apply plugin: "com.vanniktech.maven.publish"
    mavenPublish {
        targets {
            uploadArchives {
                releaseRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                snapshotRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            }
        }
    }
}

android {
    compileSdkVersion versions.compileSdk

    defaultConfig {
        targetSdkVersion versions.targetSdk
        minSdkVersion versions.minSdk

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }

    libraryVariants.all { variant ->
        variant.getGenerateBuildConfigProvider().configure {
            it.enabled = false
        }
    }
}

dependencies {
    implementation libraries.kotlinStdlib
    testImplementation testLibraries.kotlinTest
    androidTestImplementation testLibraries.testRunner
    androidTestImplementation testLibraries.espresso
}
